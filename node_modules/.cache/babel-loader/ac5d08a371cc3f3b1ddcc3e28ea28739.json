{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Pushkar soni\\\\Downloads\\\\tic-tac-toe-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pushkar soni\\\\Downloads\\\\tic-tac-toe-1\\\\src\\\\components\\\\Move.jsx\";\nimport React, { useState, useEffect } from 'react';\nexport default function Move(props) {\n  const _useState = useState('*'),\n        _useState2 = _slicedToArray(_useState, 2),\n        move = _useState2[0],\n        setMove = _useState2[1];\n\n  function getMove() {\n    if (move === '*') {\n      setMove(props.symbol);\n    }\n  }\n\n  useEffect(() => {\n    setMove('*');\n  }, [props.reset]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"april\",\n    onClick: getMove,\n    value: () => move,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, move));\n}","map":{"version":3,"sources":["C:/Users/Pushkar soni/Downloads/tic-tac-toe-1/src/components/Move.jsx"],"names":["React","useState","useEffect","Move","props","move","setMove","getMove","symbol","reset"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,oBACVH,QAAQ,CAAC,GAAD,CADE;AAAA;AAAA,QAC3BI,IAD2B;AAAA,QACrBC,OADqB;;AAElC,WAASC,OAAT,GAAmB;AACjB,QAAGF,IAAI,KAAI,GAAX,EAAe;AACfC,MAAAA,OAAO,CAACF,KAAK,CAACI,MAAP,CAAP;AACD;AACA;;AACDN,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAAC,GAAD,CAAP;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,KAAP,CAFM,CAAT;AAGA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAG,IAAA,EAAE,EAAC,OAAN;AAAc,IAAA,OAAO,EAAEF,OAAvB;AAAgC,IAAA,KAAK,EAAE,MAAIF,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADK,CAAP;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nexport default function Move(props) {\r\n  const [move, setMove] = useState('*');\r\n  function getMove() {\r\n    if(move ==='*'){\r\n    setMove(props.symbol);\r\n  }\r\n  }\r\n  useEffect(() => {\r\n    setMove('*')\r\n  }, [props.reset])\r\n  return <div>\r\n    <p id='april' onClick={getMove} value={()=>move}>\r\n      {move}\r\n    </p>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}