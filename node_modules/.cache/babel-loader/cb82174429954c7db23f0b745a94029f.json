{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Pushkar soni\\\\Downloads\\\\tic-tac-toe-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pushkar soni\\\\Downloads\\\\tic-tac-toe-1\\\\src\\\\components\\\\Board.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Move from \"./Move\";\nimport { setOriginalNode } from \"typescript\";\nexport default function Board(props) {\n  const _useState = useState(\"X\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        player = _useState2[0],\n        setPlayer = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        reset = _useState4[0],\n        setReset = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        x = _useState8[0],\n        setX = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        o = _useState10[0],\n        setO = _useState10[1];\n\n  const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  var arrayWin = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 3, 5], [3, 5, 7]];\n\n  function changePlayer(e) {\n    var a = e.target.id;\n    console.log(a, 'target');\n    setCount([...count, a]);\n\n    if (!count.includes(e.target.id)) {\n      if (player === \"X\") {\n        setPlayer(\"O\");\n        setO([...o, a]);\n      } else {\n        setPlayer(\"X\");\n        setX([...x, a]);\n      }\n    }\n  }\n\n  function resetBoard() {\n    setReset(true);\n  }\n\n  useEffect(() => {\n    console.log(reset, 'ss');\n    setReset(false);\n  }, [reset]);\n  useEffect(() => {\n    console.log(childRef.current.id, 'parent');\n  }, [player]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Player turn:\", player), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    onClick: changePlayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, arr.map((e, i) => /*#__PURE__*/React.createElement(Move, {\n    key: i + 1,\n    id: i,\n    symbol: player,\n    reset: reset,\n    onClick: changePlayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetBoard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"reset\"));\n}","map":{"version":3,"sources":["C:/Users/Pushkar soni/Downloads/tic-tac-toe-1/src/components/Board.jsx"],"names":["React","useState","useEffect","useRef","ReactDOM","Move","setOriginalNode","Board","props","player","setPlayer","reset","setReset","count","setCount","x","setX","o","setO","arr","arrayWin","changePlayer","e","a","target","id","console","log","includes","resetBoard","childRef","current","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport Move from \"./Move\";\r\nimport { setOriginalNode } from \"typescript\";\r\n\r\nexport default function Board(props) {\r\n  const [player, setPlayer] = useState(\"X\");\r\n  const [reset, setReset] = useState(false);\r\n  const [count, setCount] = useState([]);\r\n  const[x,setX]=useState([]);\r\n  const[o,setO]=useState([]);\r\n  const arr=[1,2,3,4,5,6,7,8,9];\r\n  var arrayWin=[[1,2,3],[4,5,6],[7,8,9],[1,3,5],[3,5,7]];\r\n\r\n  function changePlayer(e) {\r\n    var a=e.target.id\r\n    console.log(a,'target')\r\n    setCount([...count,a])\r\n    if(!count.includes(e.target.id)){\r\n    if (player === \"X\") {\r\n      setPlayer(\"O\");\r\n      setO([...o,a]);\r\n    } else {\r\n      setPlayer(\"X\");\r\n      setX([...x,a]);\r\n    }\r\n  }\r\n  }\r\n\r\n  function resetBoard(){\r\n    setReset(true);\r\n  }\r\n\r\n  useEffect(()=>{    \r\n    console.log(reset,'ss')\r\n    setReset(false)\r\n    \r\n  },[reset]);\r\n\r\n  useEffect(()=>{\r\n    console.log(childRef.current.id,'parent')\r\n  },[player])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Player turn:{player}</h1>\r\n      <div className=\"board\" onClick={changePlayer}>\r\n        {arr.map((e,i)=><Move key={i+1} id={i} symbol={player} reset={reset} onClick={changePlayer}/>)}\r\n      </div>\r\n      <button onClick={resetBoard}>reset</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}